apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: postgres-ha
spec:
  backups:
    pgbackrest:
      jobs:
        resources:
            requests:
              cpu: 200m
              memory: 1Gi
            limits:
              cpu: 1
              memory: 4Gi
      repoHost:
        resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 2Gi
      repos:
        - name: repo1
          volume:
            volumeClaimSpec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 2Gi
  instances:
    - affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    postgres-operator.crunchydata.com/cluster: postgres-ha
                    postgres-operator.crunchydata.com/instance-set: pgha1
                topologyKey: kubernetes.io/hostname
              weight: 1
      dataVolumeClaimSpec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi
      name: pgha1
      replicas: 3
      resources:
        requests:
          storage: 2Gi
          cpu: 500m
          memory: 2Gi
        limits:
          cpu: 1
          memory: 8Gi
  openshift: true
  port: 5432
  postgresVersion: 13
  proxy:
    pgBouncer:
      config:
        global:
          pool_mode: transaction
          max_client_conn: "100"
          default_pool_size: "20"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    postgres-operator.crunchydata.com/cluster: postgres-ha
                    postgres-operator.crunchydata.com/role: pgbouncer
                topologyKey: kubernetes.io/hostname
              weight: 1
      port: 5432
      replicas: 3
      resources:
        requests:
          cpu: 200m
          memory: 512Mi
        limits:
          cpu: 500m
          memory: 2Gi
  patroni:
    dynamicConfiguration:
      postgresql:
        parameters:
          max_connections: "2000"
  users:
    - databases:
        - service-registry
      name: service-registry